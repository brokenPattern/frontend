{"ast":null,"code":"import _defineProperty from \"/Users/michalneumann/Documents/projekty/interviewme/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/michalneumann/Documents/projekty/interviewme/frontend/src/PersonalDataForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport default class PersonalDataForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateField = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      const config = {\n        validationRules: {\n          name: value.trim().length,\n          //most basic validation rule. checks if there's anything typed in the field\n          nickName: '',\n          email: value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i),\n          field: value.trim().length,\n          position: value.trim().length\n        }\n      };\n      this.setState(prevState => ({\n        fieldTouched: _objectSpread({}, prevState.fieldTouched, {\n          [name]: true\n        })\n      }));\n\n      if (this.state.fieldRequired[name]) {\n        console.log(this.state.fieldRequired[name]);\n\n        if (config.validationRules[name]) {\n          console.log('valid');\n          this.setState(prevState => ({\n            fieldValid: _objectSpread({}, prevState.fieldValid, {\n              [name]: true\n            })\n          })); //this.updateState(name, value);\n        } else {\n          console.log('invalid');\n          this.setState(prevState => ({\n            fieldValid: _objectSpread({}, prevState.fieldValid, {\n              [name]: false\n            })\n          }));\n        }\n      }\n\n      this.updateState(name, value);\n    };\n\n    this.state = {\n      name: '',\n      nickName: '',\n      email: '',\n      field: '',\n      position: '',\n      fieldRequired: {\n        name: true,\n        nickName: false,\n        email: true,\n        field: true,\n        position: true\n      },\n      fieldTouched: {\n        name: false,\n        nickName: false,\n        email: false,\n        field: false,\n        position: false\n      },\n      fieldValid: {\n        name: false,\n        nickName: true,\n        email: false,\n        field: false,\n        position: false\n      },\n      errorMsgs: {\n        name: 'Please fill in your name',\n        nickName: '',\n        email: 'Please use a correct e-mail address',\n        field: 'Please choose your field',\n        position: 'Please choose your position'\n      }\n    };\n    this.validateField = this.validateField.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.switchSelects = this.switchSelects.bind(this);\n  }\n\n  updateState(name, value) {\n    this.setState(prevState => ({\n      [name]: value\n    }));\n  }\n\n  switchSelects() {\n    switch (this.state.field) {\n      case 'IT':\n        return React.createElement(\"select\", {\n          name: \"position\",\n          id: \"position\",\n          onChange: this.validateField,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, this.state.position ? 'Go back to Field' : 'Position'), React.createElement(\"option\", {\n          value: \"Front-end developer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Front-end developer\"), React.createElement(\"option\", {\n          value: \"Back-end developer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Back-end developer\"), React.createElement(\"option\", {\n          value: \"DevOps\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"DevOps\"), React.createElement(\"option\", {\n          value: \"Front-end developer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Webmaster\"));\n\n      case 'Product':\n        return React.createElement(\"select\", {\n          name: \"position\",\n          id: \"position\",\n          onChange: this.validateField,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, this.state.position ? 'Go back to Field' : 'Position'), React.createElement(\"option\", {\n          value: \"Product Owner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Product Owner\"), React.createElement(\"option\", {\n          value: \"UX Designer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"UX Designer\"), React.createElement(\"option\", {\n          value: \"UI Designer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"UI Designer\"));\n\n      case 'Content':\n        return React.createElement(\"select\", {\n          name: \"position\",\n          id: \"position\",\n          onChange: this.validateField,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, this.state.position ? 'Go back to Field' : 'Position'), React.createElement(\"option\", {\n          value: \"Junior Copywriter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Junior Copywriter\"), React.createElement(\"option\", {\n          value: \"Senior Copywriter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Senior Copywriter\"));\n\n      default:\n        return '';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      id: \"personal-data-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.fieldTouched.name ? this.state.fieldValid.name ? 'row success' : 'row error' : 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      noValidate: true,\n      onBlur: this.validateField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Name\"), this.state.fieldTouched.name && !this.state.fieldValid.name && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.errorMsgs.name)), React.createElement(\"div\", {\n      className: this.state.fieldTouched.name ? this.state.fieldValid.name ? 'row success' : 'row error' : 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"nickName\",\n      type: \"text\",\n      noValidate: true,\n      onBlur: this.validateField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"nickName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Nickname\"), this.state.fieldTouched.nickName && !this.state.fieldValid.nickName && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.errorMsgs.nickName)), React.createElement(\"div\", {\n      className: this.state.fieldTouched.email ? this.state.fieldValid.email ? 'row success' : 'row error' : 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      noValidate: true,\n      onBlur: this.validateField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"E-mail\"), this.state.fieldTouched.email && !this.state.fieldValid.email && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.errorMsgs.email)), React.createElement(\"div\", {\n      className: this.state.fieldTouched.field ? this.state.fieldValid.field ? 'row success' : 'row error' : 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"field\",\n      id: \"field\",\n      onChange: this.validateField,\n      disabled: this.state.position !== '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Field\"), React.createElement(\"option\", {\n      value: \"IT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"IT\"), React.createElement(\"option\", {\n      value: \"Product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"option\", {\n      value: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Content\")), this.state.fieldTouched.field && !this.state.fieldValid.field && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.errorMsgs.field)), React.createElement(\"div\", {\n      className: this.state.fieldTouched.position ? this.state.fieldValid.position ? 'row success' : 'row error' : 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.switchSelects(), this.state.fieldTouched.position && !this.state.fieldValid.position && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.errorMsgs.position)), React.createElement(\"input\", {\n      id: \"submit-button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Name: \", this.state.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Nickname: \", this.state.nickName), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"E-mail: \", this.state.email), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Field: \", this.state.field), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Position: \", this.state.position)));\n  }\n\n}","map":{"version":3,"sources":["/Users/michalneumann/Documents/projekty/interviewme/frontend/src/PersonalDataForm.js"],"names":["React","PersonalDataForm","Component","constructor","props","validateField","e","target","name","value","config","validationRules","trim","length","nickName","email","match","field","position","setState","prevState","fieldTouched","state","fieldRequired","console","log","fieldValid","updateState","errorMsgs","bind","switchSelects","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default class PersonalDataForm extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            name: '',\n                nickName: '',\n                email: '',\n                field: '',\n                position: '',\n            fieldRequired: {\n                    name: true,\n                    nickName: false,\n                    email: true,\n                    field: true,\n                    position: true,\n                },\n                fieldTouched:{\n                    name: false,\n                    nickName: false,\n                    email: false,\n                    field: false,\n                    position: false,\n                },\n                fieldValid:{\n                    name: false,\n                    nickName: true,\n                    email: false,\n                    field: false,\n                    position: false,\n                },\n                errorMsgs: {\n                    name: 'Please fill in your name',\n                    nickName: '',\n                    email: 'Please use a correct e-mail address',\n                    field: 'Please choose your field',\n                    position: 'Please choose your position',\n                },\n        }\n        this.validateField = this.validateField.bind(this);\n        this.updateState = this.updateState.bind(this);\n        this.switchSelects = this.switchSelects.bind(this);\n    }\n    \n    \n    updateState (name, value) {\n        this.setState(prevState => ({[name]: value}))\n    }\n    \n    validateField = (e) => {\n        const {name, value} = e.target;\n        const config = {\n            \n                validationRules: {\n                    name:  value.trim().length, //most basic validation rule. checks if there's anything typed in the field\n                    nickName: '',\n                    email: value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i),\n                    field: value.trim().length,\n                    position: value.trim().length,\n                },\n        }\n        this.setState(prevState => ({\n            fieldTouched: {\n                ...prevState.fieldTouched,\n                        [name]: true\n            }\n        }))\n        \n        if(this.state.fieldRequired[name]){\n            console.log(this.state.fieldRequired[name])\n            \n            if(config.validationRules[name]){\n                console.log('valid');\n\n                this.setState(prevState => ({\n                    fieldValid: { \n                        ...prevState.fieldValid,\n                        [name]: true\n                    }\n                }))\n                //this.updateState(name, value);\n                \n            } else {\n                console.log('invalid');\n                \n                 this.setState(prevState => ({\n                    fieldValid: { \n                        ...prevState.fieldValid,\n                        [name]: false\n                    }\n                }))\n                \n            }\n            \n        }\n        \n        this.updateState(name, value);\n        \n    }\n    \n    switchSelects () {\n        switch(this.state.field){\n            case  'IT':\n                return (\n                    \n                        <select name=\"position\" id=\"position\" onChange={this.validateField}>\n                            <option value=\"\">{this.state.position ? 'Go back to Field' : 'Position'}</option>\n                            <option value=\"Front-end developer\">Front-end developer</option>\n                            <option value=\"Back-end developer\">Back-end developer</option>\n                            <option value=\"DevOps\">DevOps</option>\n                            <option value=\"Front-end developer\">Webmaster</option>\n                        </select>\n                    \n                );\n            case 'Product':\n                return (\n                         <select name=\"position\" id=\"position\" onChange={this.validateField}>\n                            <option value=\"\">{this.state.position ? 'Go back to Field' : 'Position'}</option>\n                            <option value=\"Product Owner\">Product Owner</option>\n                            <option value=\"UX Designer\">UX Designer</option>\n                            <option value=\"UI Designer\">UI Designer</option>\n                                             </select>\n                    \n                );\n             case 'Content':\n                return (\n                         <select name=\"position\" id=\"position\" onChange={this.validateField}>\n                            <option value=\"\">{this.state.position ? 'Go back to Field' : 'Position'}</option>\n                            <option value=\"Junior Copywriter\">Junior Copywriter</option>\n                            <option value=\"Senior Copywriter\">Senior Copywriter</option>\n                                             </select>\n                );\n\n            default:\n                return('');\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <form action=\"\" id=\"personal-data-form\">\n                    <div className={this.state.fieldTouched.name ? (this.state.fieldValid.name ? 'row success' : 'row error'): 'row'}>\n                        <input name=\"name\" type=\"text\" noValidate onBlur={this.validateField}/>\n                        <label htmlFor=\"name\">Name</label>\n                        {this.state.fieldTouched.name && !this.state.fieldValid.name && <div className=\"error-message\">{this.state.errorMsgs.name}</div>}\n                    </div>\n                    <div className={this.state.fieldTouched.name ? (this.state.fieldValid.name ? 'row success' : 'row error'): 'row'}>\n                        <input name=\"nickName\" type=\"text\" noValidate onBlur={this.validateField}/>\n                        <label htmlFor=\"nickName\">Nickname</label>\n                        {this.state.fieldTouched.nickName && !this.state.fieldValid.nickName && <div className=\"error-message\">{this.state.errorMsgs.nickName}</div>}\n                    </div>\n                    <div className={this.state.fieldTouched.email ? (this.state.fieldValid.email ? 'row success' : 'row error'): 'row'}>\n                        <input name=\"email\" type=\"email\" noValidate onBlur={this.validateField}/>\n                        <label htmlFor=\"email\">E-mail</label>\n                        {this.state.fieldTouched.email && !this.state.fieldValid.email && <div className=\"error-message\">{this.state.errorMsgs.email}</div>}\n                    </div>\n                    <div className={this.state.fieldTouched.field ? (this.state.fieldValid.field ? 'row success' : 'row error'): 'row'}>\n                        <select name=\"field\" id=\"field\" onChange={this.validateField} disabled={this.state.position !== ''}>\n                            <option value=\"\">Field</option>\n                            <option value=\"IT\">IT</option>\n                            <option value=\"Product\">Product</option>\n                            <option value=\"Content\">Content</option>\n                        </select>\n                        {this.state.fieldTouched.field && !this.state.fieldValid.field && <div className=\"error-message\">{this.state.errorMsgs.field}</div>}\n                    </div>\n                    <div className={this.state.fieldTouched.position ? (this.state.fieldValid.position ? 'row success' : 'row error'): 'row'}>\n                        {this.switchSelects()}\n                        {this.state.fieldTouched.position && !this.state.fieldValid.position && <div className=\"error-message\">{this.state.errorMsgs.position}</div>}\n                    </div>\n                    \n                    \n                   \n                    \n                    <input id=\"submit-button\" type=\"submit\" value=\"Submit\" />\n                </form>\n                <ol>\n                    <li>Name: {this.state.name}</li>\n                    <li>Nickname: {this.state.nickName}</li>\n                    <li>E-mail: {this.state.email}</li>\n                    <li>Field: {this.state.field}</li>\n                    <li>Position: {this.state.position}</li>\n                </ol>\n            </div>\n            \n            \n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}