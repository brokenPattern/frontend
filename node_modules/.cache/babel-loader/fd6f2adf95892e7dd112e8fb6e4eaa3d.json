{"ast":null,"code":"import _defineProperty from \"/Users/michalneumann/Documents/projekty/interviewme/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/michalneumann/Documents/projekty/interviewme/frontend/src/PersonalDataForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport default class PersonalDataForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateField = (name, value) => {\n      const config = {\n        validationRules: {\n          name: value.trim().length,\n          //most basic validation rule. checks if there's anything typed in the field\n          nickName: true,\n          email: value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i),\n          field: value.trim().length,\n          position: value.trim().length\n        }\n      };\n      this.setState(prevState => ({\n        fieldTouched: _objectSpread({}, prevState.fieldTouched, {\n          [name]: true\n        })\n      }));\n\n      if (this.state.fieldRequired[name]) {\n        if (config.validationRules[name]) {\n          this.setState(prevState => ({\n            fieldValid: _objectSpread({}, prevState.fieldValid, {\n              [name]: true\n            })\n          }));\n        } else {\n          this.setState(prevState => ({\n            fieldValid: _objectSpread({}, prevState.fieldValid, {\n              [name]: false\n            })\n          }));\n        }\n      }\n    };\n\n    this.saveToLocalStorage = () => {\n      window.localStorage.setItem('PDFUser', JSON.stringify(this.state.fieldValues));\n    };\n\n    this.submitPersonalDataForm = e => {\n      e.preventDefault();\n\n      if (this.validateAllFields()) {}\n    };\n\n    this.state = {\n      fieldValues: {\n        name: '',\n        nickName: '',\n        email: '',\n        field: '',\n        position: ''\n      },\n      fieldRequired: {\n        name: true,\n        nickName: false,\n        email: true,\n        field: true,\n        position: true\n      },\n      fieldTouched: {\n        name: false,\n        nickName: false,\n        email: false,\n        field: false,\n        position: false\n      },\n      fieldValid: {\n        name: false,\n        nickName: true,\n        email: false,\n        field: false,\n        position: false\n      },\n      errorMsgs: {\n        name: 'Please fill in your name',\n        nickName: '',\n        email: 'Please use a correct e-mail address',\n        field: 'Please choose your field',\n        position: 'Please choose your position'\n      }\n    };\n    this.validateField = this.validateField.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.switchSelects = this.switchSelects.bind(this);\n  }\n\n  updateState(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState(prevState => ({\n      fieldValues: _objectSpread({}, prevState.fieldValues, {\n        [name]: value\n      })\n    }));\n    this.validateField(name, value);\n  }\n\n  validateAllFields() {\n    let valid;\n    Object.entries(this.state.fieldValues).forEach(([key, value]) => this.validateField(key, value));\n    Object.entries(this.state.fieldValid).forEach(([key, value]) => {\n      if (value === false) {\n        valid = false;\n      } else {\n        valid = true;\n      }\n    });\n    return valid;\n  }\n\n  switchSelects() {\n    switch (this.state.fieldValues.field) {\n      case 'IT':\n        return React.createElement(\"select\", {\n          name: \"position\",\n          id: \"position\",\n          onChange: this.updateState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, this.state.fieldValues.position ? 'Go back to Field' : 'Position'), React.createElement(\"option\", {\n          value: \"Front-end developer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Front-end developer\"), React.createElement(\"option\", {\n          value: \"Back-end developer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Back-end developer\"), React.createElement(\"option\", {\n          value: \"DevOps\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"DevOps\"), React.createElement(\"option\", {\n          value: \"Front-end developer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Webmaster\"));\n\n      case 'Product':\n        return React.createElement(\"select\", {\n          name: \"position\",\n          id: \"position\",\n          onChange: this.updateState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, this.state.fieldValues.position ? 'Go back to Field' : 'Position'), React.createElement(\"option\", {\n          value: \"Product Owner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"Product Owner\"), React.createElement(\"option\", {\n          value: \"UX Designer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"UX Designer\"), React.createElement(\"option\", {\n          value: \"UI Designer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"UI Designer\"));\n\n      case 'Content':\n        return React.createElement(\"select\", {\n          name: \"position\",\n          id: \"position\",\n          onChange: this.updateState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, this.state.fieldValues.position ? 'Go back to Field' : 'Position'), React.createElement(\"option\", {\n          value: \"Junior Copywriter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"Junior Copywriter\"), React.createElement(\"option\", {\n          value: \"Senior Copywriter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Senior Copywriter\"));\n\n      default:\n        return '';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      id: \"personal-data-form\",\n      onSubmit: this.submitPersonalDataForm,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'row ' + (this.state.fieldRequired.name && this.state.fieldTouched.name ? this.state.fieldValid.name ? 'success' : 'error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      noValidate: true,\n      onBlur: this.updateState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Name\"), this.state.fieldRequired.name && this.state.fieldTouched.name && !this.state.fieldValid.name && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.errorMsgs.name)), React.createElement(\"div\", {\n      className: 'row ' + (this.state.fieldRequired.nickName && this.state.fieldTouched.nickName ? this.state.fieldValid.nickName ? 'success' : 'error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"nickName\",\n      type: \"text\",\n      noValidate: true,\n      onBlur: this.updateState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"nickName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Nickname\"), this.state.fieldRequired.nickName && this.state.fieldTouched.nickName && !this.state.fieldValid.nickName && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.state.errorMsgs.nickName)), React.createElement(\"div\", {\n      className: 'row ' + (this.state.fieldRequired.email && this.state.fieldTouched.email ? this.state.fieldValid.email ? 'success' : 'error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      noValidate: true,\n      onBlur: this.updateState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"E-mail\"), this.state.fieldRequired.email && this.state.fieldTouched.email && !this.state.fieldValid.email && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.state.errorMsgs.email)), React.createElement(\"div\", {\n      className: 'row ' + (this.state.fieldRequired.field && this.state.fieldTouched.field ? this.state.fieldValid.field ? 'success' : 'error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"field\",\n      id: \"field\",\n      onChange: this.updateState,\n      disabled: this.state.fieldValues.position !== '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Field\"), React.createElement(\"option\", {\n      value: \"IT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"IT\"), React.createElement(\"option\", {\n      value: \"Product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"option\", {\n      value: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Content\")), this.state.fieldRequired.field && this.state.fieldTouched.field && !this.state.fieldValid.field && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.state.errorMsgs.field)), React.createElement(\"div\", {\n      className: 'row ' + (this.state.fieldRequired.position && this.state.fieldTouched.position ? this.state.fieldValid.position ? 'success' : 'error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.switchSelects(), this.state.fieldRequired.position && this.state.fieldTouched.position && !this.state.fieldValid.position && React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, this.state.errorMsgs.position)), React.createElement(\"input\", {\n      id: \"submit-button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Name: \", this.state.fieldValues.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Nickname: \", this.state.fieldValues.nickName), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"E-mail: \", this.state.fieldValues.email), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Field: \", this.state.fieldValues.field), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Position: \", this.state.fieldValues.position)));\n  }\n\n}","map":{"version":3,"sources":["/Users/michalneumann/Documents/projekty/interviewme/frontend/src/PersonalDataForm.js"],"names":["React","PersonalDataForm","Component","constructor","props","validateField","name","value","config","validationRules","trim","length","nickName","email","match","field","position","setState","prevState","fieldTouched","state","fieldRequired","fieldValid","saveToLocalStorage","window","localStorage","setItem","JSON","stringify","fieldValues","submitPersonalDataForm","e","preventDefault","validateAllFields","errorMsgs","bind","updateState","switchSelects","target","valid","Object","entries","forEach","key","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC1DC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAyDpBC,aAzDoB,GAyDJ,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,YAAMC,MAAM,GAAG;AAEPC,QAAAA,eAAe,EAAE;AACbH,UAAAA,IAAI,EAAGC,KAAK,CAACG,IAAN,GAAaC,MADP;AACe;AAC5BC,UAAAA,QAAQ,EAAE,IAFG;AAGbC,UAAAA,KAAK,EAAEN,KAAK,CAACO,KAAN,CAAY,sCAAZ,CAHM;AAIbC,UAAAA,KAAK,EAAER,KAAK,CAACG,IAAN,GAAaC,MAJP;AAKbK,UAAAA,QAAQ,EAAET,KAAK,CAACG,IAAN,GAAaC;AALV;AAFV,OAAf;AAUA,WAAKM,QAAL,CAAcC,SAAS,KAAK;AACxBC,QAAAA,YAAY,oBACLD,SAAS,CAACC,YADL;AAEA,WAACb,IAAD,GAAQ;AAFR;AADY,OAAL,CAAvB;;AAOA,UAAG,KAAKc,KAAL,CAAWC,aAAX,CAAyBf,IAAzB,CAAH,EAAkC;AAG9B,YAAGE,MAAM,CAACC,eAAP,CAAuBH,IAAvB,CAAH,EAAgC;AAE5B,eAAKW,QAAL,CAAcC,SAAS,KAAK;AACxBI,YAAAA,UAAU,oBACHJ,SAAS,CAACI,UADP;AAEN,eAAChB,IAAD,GAAQ;AAFF;AADc,WAAL,CAAvB;AAOH,SATD,MASO;AAEF,eAAKW,QAAL,CAAcC,SAAS,KAAK;AACzBI,YAAAA,UAAU,oBACHJ,SAAS,CAACI,UADP;AAEN,eAAChB,IAAD,GAAQ;AAFF;AADe,WAAL,CAAvB;AAOJ;AAEJ;AAEJ,KApGmB;;AAAA,SAsHpBiB,kBAtHoB,GAsHC,MAAM;AACvBC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,EAAuCC,IAAI,CAACC,SAAL,CAAe,KAAKR,KAAL,CAAWS,WAA1B,CAAvC;AACH,KAxHmB;;AAAA,SA2HpBC,sBA3HoB,GA2HMC,CAAD,IAAO;AAC5BA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAG,KAAKC,iBAAL,EAAH,EAA4B,CAE3B;AACJ,KAhImB;;AAEhB,SAAKb,KAAL,GAAa;AACTS,MAAAA,WAAW,EAAE;AACTvB,QAAAA,IAAI,EAAE,EADG;AAETM,QAAAA,QAAQ,EAAE,EAFD;AAGTC,QAAAA,KAAK,EAAE,EAHE;AAITE,QAAAA,KAAK,EAAE,EAJE;AAKTC,QAAAA,QAAQ,EAAE;AALD,OADJ;AAQTK,MAAAA,aAAa,EAAE;AACXf,QAAAA,IAAI,EAAE,IADK;AAEXM,QAAAA,QAAQ,EAAE,KAFC;AAGXC,QAAAA,KAAK,EAAE,IAHI;AAIXE,QAAAA,KAAK,EAAE,IAJI;AAKXC,QAAAA,QAAQ,EAAE;AALC,OARN;AAeTG,MAAAA,YAAY,EAAC;AACTb,QAAAA,IAAI,EAAE,KADG;AAETM,QAAAA,QAAQ,EAAE,KAFD;AAGTC,QAAAA,KAAK,EAAE,KAHE;AAITE,QAAAA,KAAK,EAAE,KAJE;AAKTC,QAAAA,QAAQ,EAAE;AALD,OAfJ;AAsBTM,MAAAA,UAAU,EAAC;AACPhB,QAAAA,IAAI,EAAE,KADC;AAEPM,QAAAA,QAAQ,EAAE,IAFH;AAGPC,QAAAA,KAAK,EAAE,KAHA;AAIPE,QAAAA,KAAK,EAAE,KAJA;AAKPC,QAAAA,QAAQ,EAAE;AALH,OAtBF;AA6BTkB,MAAAA,SAAS,EAAE;AACP5B,QAAAA,IAAI,EAAE,0BADC;AAEPM,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,KAAK,EAAE,qCAHA;AAIPE,QAAAA,KAAK,EAAE,0BAJA;AAKPC,QAAAA,QAAQ,EAAE;AALH;AA7BF,KAAb;AAqCA,SAAKX,aAAL,GAAqB,KAAKA,aAAL,CAAmB8B,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAGDC,EAAAA,WAAW,CAAEL,CAAF,EAAK;AAAA,sBACUA,CAAC,CAACO,MADZ;AAAA,UACLhC,IADK,aACLA,IADK;AAAA,UACCC,KADD,aACCA,KADD;AAEZ,SAAKU,QAAL,CAAcC,SAAS,KAAK;AACxBW,MAAAA,WAAW,oBACJX,SAAS,CAACW,WADN;AAEC,SAACvB,IAAD,GAAQC;AAFT;AADa,KAAL,CAAvB;AAMA,SAAKF,aAAL,CAAmBC,IAAnB,EAAyBC,KAAzB;AAEH;;AA+CD0B,EAAAA,iBAAiB,GAAE;AACf,QAAIM,KAAJ;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAe,KAAKrB,KAAL,CAAWS,WAA1B,EAAuCa,OAAvC,CACI,CAAC,CAACC,GAAD,EAAMpC,KAAN,CAAD,KAAkB,KAAKF,aAAL,CAAmBsC,GAAnB,EAAwBpC,KAAxB,CADtB;AAGAiC,IAAAA,MAAM,CAACC,OAAP,CAAe,KAAKrB,KAAL,CAAWE,UAA1B,EAAsCoB,OAAtC,CACI,CAAC,CAACC,GAAD,EAAMpC,KAAN,CAAD,KAAkB;AAAC,UAAIA,KAAK,KAAK,KAAd,EAAoB;AACnCgC,QAAAA,KAAK,GAAG,KAAR;AACH,OAFkB,MAEZ;AACHA,QAAAA,KAAK,GAAG,IAAR;AACH;AACJ,KAND;AAQA,WAAOA,KAAP;AACH;;AAcDF,EAAAA,aAAa,GAAI;AACb,YAAO,KAAKjB,KAAL,CAAWS,WAAX,CAAuBd,KAA9B;AACI,WAAM,IAAN;AACI,eAEQ;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,EAAE,EAAC,UAA3B;AAAsC,UAAA,QAAQ,EAAE,KAAKqB,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkB,KAAKhB,KAAL,CAAWS,WAAX,CAAuBb,QAAvB,GAAkC,kBAAlC,GAAuD,UAAzE,CADJ,EAEI;AAAQ,UAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAGI;AAAQ,UAAA,KAAK,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHJ,EAII;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAKI;AAAQ,UAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,CAFR;;AAWJ,WAAK,SAAL;AACI,eACQ;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,EAAE,EAAC,UAA3B;AAAsC,UAAA,QAAQ,EAAE,KAAKoB,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkB,KAAKhB,KAAL,CAAWS,WAAX,CAAuBb,QAAvB,GAAkC,kBAAlC,GAAuD,UAAzE,CADJ,EAEI;AAAQ,UAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAQ,UAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,EAII;AAAQ,UAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,CADR;;AASH,WAAK,SAAL;AACG,eACQ;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,EAAE,EAAC,UAA3B;AAAsC,UAAA,QAAQ,EAAE,KAAKoB,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkB,KAAKhB,KAAL,CAAWS,WAAX,CAAuBb,QAAvB,GAAkC,kBAAlC,GAAuD,UAAzE,CADJ,EAEI;AAAQ,UAAA,KAAK,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGI;AAAQ,UAAA,KAAK,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHJ,CADR;;AAQJ;AACI,eAAO,EAAP;AAjCR;AAmCH;;AAED4B,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,EAAE,EAAC,oBAAnB;AAAwC,MAAA,QAAQ,EAAE,KAAKd,sBAAvD;AAA+E,MAAA,UAAU,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,UACG,KAAKV,KAAL,CAAWC,aAAX,CAAyBf,IAAzB,IAAiC,KAAKc,KAAL,CAAWD,YAAX,CAAwBb,IAAzD,GACE,KAAKc,KAAL,CAAWE,UAAX,CAAsBhB,IAAtB,GACG,SADH,GACe,OAFjB,GAGE,EAJL,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,UAAU,MAAzC;AAA0C,MAAA,MAAM,EAAE,KAAK8B,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EASK,KAAKhB,KAAL,CAAWC,aAAX,CAAyBf,IAAzB,IACG,KAAKc,KAAL,CAAWD,YAAX,CAAwBb,IAD3B,IAEG,CAAC,KAAKc,KAAL,CAAWE,UAAX,CAAsBhB,IAF1B,IAGG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKc,KAAL,CAAWc,SAAX,CAAqB5B,IAArD,CAZR,CADJ,EAiBI;AAAK,MAAA,SAAS,EAAE,UACO,KAAKc,KAAL,CAAWC,aAAX,CAAyBT,QAAzB,IAAqC,KAAKQ,KAAL,CAAWD,YAAX,CAAwBP,QAA7D,GACE,KAAKQ,KAAL,CAAWE,UAAX,CAAsBV,QAAtB,GACG,SADH,GACe,OAFjB,GAGE,EAJT,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,UAAU,MAA7C;AAA8C,MAAA,MAAM,EAAE,KAAKwB,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EASK,KAAKhB,KAAL,CAAWC,aAAX,CAAyBT,QAAzB,IACG,KAAKQ,KAAL,CAAWD,YAAX,CAAwBP,QAD3B,IAEG,CAAC,KAAKQ,KAAL,CAAWE,UAAX,CAAsBV,QAF1B,IAGG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKQ,KAAL,CAAWc,SAAX,CAAqBtB,QAArD,CAZR,CAjBJ,EAgCI;AAAK,MAAA,SAAS,EAAE,UACO,KAAKQ,KAAL,CAAWC,aAAX,CAAyBR,KAAzB,IAAkC,KAAKO,KAAL,CAAWD,YAAX,CAAwBN,KAA1D,GACE,KAAKO,KAAL,CAAWE,UAAX,CAAsBT,KAAtB,GACG,SADH,GACe,OAFjB,GAGE,EAJT,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,UAAU,MAA3C;AAA4C,MAAA,MAAM,EAAE,KAAKuB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EASK,KAAKhB,KAAL,CAAWC,aAAX,CAAyBR,KAAzB,IACG,KAAKO,KAAL,CAAWD,YAAX,CAAwBN,KAD3B,IAEG,CAAC,KAAKO,KAAL,CAAWE,UAAX,CAAsBT,KAF1B,IAGG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKO,KAAL,CAAWc,SAAX,CAAqBrB,KAArD,CAZR,CAhCJ,EA+CI;AAAK,MAAA,SAAS,EAAE,UACO,KAAKO,KAAL,CAAWC,aAAX,CAAyBN,KAAzB,IAAkC,KAAKK,KAAL,CAAWD,YAAX,CAAwBJ,KAA1D,GACE,KAAKK,KAAL,CAAWE,UAAX,CAAsBP,KAAtB,GACG,SADH,GACe,OAFjB,GAGE,EAJT,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,EAAE,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAKqB,WAA/C;AAA4D,MAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWS,WAAX,CAAuBb,QAAvB,KAAoC,EAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CANJ,EAaK,KAAKI,KAAL,CAAWC,aAAX,CAAyBN,KAAzB,IACG,KAAKK,KAAL,CAAWD,YAAX,CAAwBJ,KAD3B,IAEG,CAAC,KAAKK,KAAL,CAAWE,UAAX,CAAsBP,KAF1B,IAGG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKK,KAAL,CAAWc,SAAX,CAAqBnB,KAArD,CAhBR,CA/CJ,EAmEI;AAAK,MAAA,SAAS,EAAE,UACO,KAAKK,KAAL,CAAWC,aAAX,CAAyBL,QAAzB,IAAqC,KAAKI,KAAL,CAAWD,YAAX,CAAwBH,QAA7D,GACE,KAAKI,KAAL,CAAWE,UAAX,CAAsBN,QAAtB,GACG,SADH,GACe,OAFjB,GAGE,EAJT,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKqB,aAAL,EANL,EAQK,KAAKjB,KAAL,CAAWC,aAAX,CAAyBL,QAAzB,IACG,KAAKI,KAAL,CAAWD,YAAX,CAAwBH,QAD3B,IAEG,CAAC,KAAKI,KAAL,CAAWE,UAAX,CAAsBN,QAF1B,IAGG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKI,KAAL,CAAWc,SAAX,CAAqBlB,QAArD,CAXR,CAnEJ,EAkFI;AAAO,MAAA,EAAE,EAAC,eAAV;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlFJ,CADJ,EAuFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKI,KAAL,CAAWS,WAAX,CAAuBvB,IAAlC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKc,KAAL,CAAWS,WAAX,CAAuBjB,QAAtC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKQ,KAAL,CAAWS,WAAX,CAAuBhB,KAApC,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKO,KAAL,CAAWS,WAAX,CAAuBd,KAAnC,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKK,KAAL,CAAWS,WAAX,CAAuBb,QAAtC,CALJ,CAvFJ,CADJ;AAoGH;;AA9QyD","sourcesContent":["import React from 'react';\n\nexport default class PersonalDataForm extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            fieldValues: {\n                name: '',\n                nickName: '',\n                email: '',\n                field: '',\n                position: '',\n            },\n            fieldRequired: {\n                name: true,\n                nickName: false,\n                email: true,\n                field: true,\n                position: true,\n            },\n            fieldTouched:{\n                name: false,\n                nickName: false,\n                email: false,\n                field: false,\n                position: false,\n            },\n            fieldValid:{\n                name: false,\n                nickName: true,\n                email: false,\n                field: false,\n                position: false,\n            },\n            errorMsgs: {\n                name: 'Please fill in your name',\n                nickName: '',\n                email: 'Please use a correct e-mail address',\n                field: 'Please choose your field',\n                position: 'Please choose your position',\n            },\n        }\n        this.validateField = this.validateField.bind(this);\n        this.updateState = this.updateState.bind(this);\n        this.switchSelects = this.switchSelects.bind(this);\n    }\n    \n    \n    updateState (e) {\n        const {name, value} = e.target;\n        this.setState(prevState => ({\n            fieldValues: {\n                ...prevState.fieldValues,\n                        [name]: value\n            }\n        }))\n        this.validateField(name, value)\n        \n    }\n    \n    validateField = (name, value) => {\n        const config = {\n            \n                validationRules: {\n                    name:  value.trim().length, //most basic validation rule. checks if there's anything typed in the field\n                    nickName: true,\n                    email: value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i),\n                    field: value.trim().length,\n                    position: value.trim().length,\n                },\n        }\n        this.setState(prevState => ({\n            fieldTouched: {\n                ...prevState.fieldTouched,\n                        [name]: true\n            }\n        }))\n        \n        if(this.state.fieldRequired[name]){\n            \n            \n            if(config.validationRules[name]){\n\n                this.setState(prevState => ({\n                    fieldValid: { \n                        ...prevState.fieldValid,\n                        [name]: true\n                    }\n                }))\n                \n            } else {\n                \n                 this.setState(prevState => ({\n                    fieldValid: { \n                        ...prevState.fieldValid,\n                        [name]: false\n                    }\n                }))\n                \n            }\n            \n        }\n        \n    }\n    \n    validateAllFields(){\n        let valid;\n        Object.entries(this.state.fieldValues).forEach(\n            ([key, value]) => this.validateField(key, value)\n        )\n        Object.entries(this.state.fieldValid).forEach(\n            ([key, value]) => {if (value === false){\n                valid = false\n            } else {\n                valid = true\n            }\n        }\n        )\n        return valid;\n    }\n    \n    saveToLocalStorage = () => {\n        window.localStorage.setItem('PDFUser', JSON.stringify(this.state.fieldValues));\n    }\n    \n    \n    submitPersonalDataForm = (e) => {\n        e.preventDefault();\n        if(this.validateAllFields()){\n            \n        }\n    }\n    \n    switchSelects () {\n        switch(this.state.fieldValues.field){\n            case  'IT':\n                return (\n                    \n                        <select name=\"position\" id=\"position\" onChange={this.updateState}>\n                            <option value=\"\">{this.state.fieldValues.position ? 'Go back to Field' : 'Position'}</option>\n                            <option value=\"Front-end developer\">Front-end developer</option>\n                            <option value=\"Back-end developer\">Back-end developer</option>\n                            <option value=\"DevOps\">DevOps</option>\n                            <option value=\"Front-end developer\">Webmaster</option>\n                        </select>\n                    \n                );\n            case 'Product':\n                return (\n                        <select name=\"position\" id=\"position\" onChange={this.updateState}>\n                            <option value=\"\">{this.state.fieldValues.position ? 'Go back to Field' : 'Position'}</option>\n                            <option value=\"Product Owner\">Product Owner</option>\n                            <option value=\"UX Designer\">UX Designer</option>\n                            <option value=\"UI Designer\">UI Designer</option>\n                        </select>\n                    \n                );\n             case 'Content':\n                return (\n                        <select name=\"position\" id=\"position\" onChange={this.updateState}>\n                            <option value=\"\">{this.state.fieldValues.position ? 'Go back to Field' : 'Position'}</option>\n                            <option value=\"Junior Copywriter\">Junior Copywriter</option>\n                            <option value=\"Senior Copywriter\">Senior Copywriter</option>\n                        </select>\n                );\n\n            default:\n                return('');\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <form action=\"\" id=\"personal-data-form\" onSubmit={this.submitPersonalDataForm} noValidate>\n                    <div className={'row ' \n                                    + (this.state.fieldRequired.name && this.state.fieldTouched.name ?\n                                        (this.state.fieldValid.name ? \n                                            'success' : 'error')\n                                       : '')}>\n                                       \n                        <input name=\"name\" type=\"text\" noValidate onBlur={this.updateState}/>\n                        <label htmlFor=\"name\">Name</label>\n                        \n                        {this.state.fieldRequired.name\n                         && this.state.fieldTouched.name \n                         && !this.state.fieldValid.name \n                         && <div className=\"error-message\">{this.state.errorMsgs.name}</div>}\n                         \n                    </div>\n                    \n                    <div className={'row '\n                                        + (this.state.fieldRequired.nickName && this.state.fieldTouched.nickName ? \n                                            (this.state.fieldValid.nickName ?\n                                                'success' : 'error')\n                                           : '')}>\n                               \n                        <input name=\"nickName\" type=\"text\" noValidate onBlur={this.updateState}/>\n                        <label htmlFor=\"nickName\">Nickname</label>\n                        \n                        {this.state.fieldRequired.nickName \n                         && this.state.fieldTouched.nickName \n                         && !this.state.fieldValid.nickName \n                         && <div className=\"error-message\">{this.state.errorMsgs.nickName}</div>}\n                    </div>\n                    \n                    <div className={'row '\n                                        + (this.state.fieldRequired.email && this.state.fieldTouched.email ?\n                                            (this.state.fieldValid.email ?\n                                                'success' : 'error')\n                                           : '')}>\n                               \n                        <input name=\"email\" type=\"email\" noValidate onBlur={this.updateState}/>\n                        <label htmlFor=\"email\">E-mail</label>\n                        \n                        {this.state.fieldRequired.email\n                         && this.state.fieldTouched.email \n                         && !this.state.fieldValid.email \n                         && <div className=\"error-message\">{this.state.errorMsgs.email}</div>}\n                         \n                    </div>\n                    <div className={'row '\n                                        + (this.state.fieldRequired.field && this.state.fieldTouched.field ? \n                                            (this.state.fieldValid.field ?\n                                                'success' : 'error')\n                                           : '')}>\n                                           \n                        <select name=\"field\" id=\"field\" onChange={this.updateState} disabled={this.state.fieldValues.position !== ''}>\n                            <option value=\"\">Field</option>\n                            <option value=\"IT\">IT</option>\n                            <option value=\"Product\">Product</option>\n                            <option value=\"Content\">Content</option>\n                        </select>\n                        \n                        {this.state.fieldRequired.field \n                         && this.state.fieldTouched.field \n                         && !this.state.fieldValid.field \n                         && <div className=\"error-message\">{this.state.errorMsgs.field}</div>}\n                         \n                    </div>\n                    \n                    <div className={'row ' \n                                        + (this.state.fieldRequired.position && this.state.fieldTouched.position ?\n                                            (this.state.fieldValid.position ?\n                                                'success' : 'error')\n                                           : '')}>\n                                           \n                        {this.switchSelects()}\n                        \n                        {this.state.fieldRequired.position \n                         && this.state.fieldTouched.position \n                         && !this.state.fieldValid.position \n                         && <div className=\"error-message\">{this.state.errorMsgs.position}</div>}\n                         \n                    </div>\n                    \n                    <input id=\"submit-button\" type=\"submit\" value=\"Submit\"/>\n                </form>\n                \n                \n                <ol>\n                    <li>Name: {this.state.fieldValues.name}</li>\n                    <li>Nickname: {this.state.fieldValues.nickName}</li>\n                    <li>E-mail: {this.state.fieldValues.email}</li>\n                    <li>Field: {this.state.fieldValues.field}</li>\n                    <li>Position: {this.state.fieldValues.position}</li>\n                </ol>\n            </div>\n            \n            \n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}